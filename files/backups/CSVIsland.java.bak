import java.io.File;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.util.LinkedList;

class CSVIsland implements CSVParsable
{
	private File inputFile;
	private Island island;
	
	CSVIsland(File inputFile)
	{
		this.inputFile = inputFile;
	}
	
	public Island getData(boolean omitFirstLine) throws CSVInputException
	{
		int lineNumber = 0;
		String line;
		String[] parts;
		double longitude;
		double latitude;
		LinkedList<Coordinates> apexes = new LinkedList<Coordinates>();
		Island isl;
		
		try(BufferedReader bufferedReader = new BufferedReader(new FileReader(inputFile))){
			try{
				if(omitFirstLine){
					lineNumber++;
					bufferedReader.readLine();
				}
				while((line = bufferedReader.readLine()) != null){
					lineNumber++;
					if(line.isEmpty()){
						break;
					}
					if(line.charAt(0) == '#'){
						continue;
					}
					line = line.replaceAll("\\s+", ""); // eat whitespace
					parts = line.split(",");
					longitude = Double.parseDouble(parts[0]);
					latitude = Double.parseDouble(parts[1]);
					apexes.add(new Coordinates(longitude, latitude));
				}
			} catch(IllegalArgumentException | IndexOutOfBoundsException e){
				throw new CSVInputException("Bad input, line " + lineNumber, e);
			}
			String islandFileName = inputFile.getName().substring(0, inputFile.getName().length() - 4); // drop the ".csv" suffix
			String islandName = islandFileName.substring(0, 1).toUpperCase() + islandFileName.substring(1).toLowerCase(); // capitalize 1st letter, lower-case the rest.
			try{
				isl = Island.createIsland(apexes, islandName);
				return isl;
			} catch(CSVIslandException ie){
				throw new CSVInputException("Invalid sequence of island apexes", ie);
			}
		} catch(IOException ioex){
			throw new CSVInputException("I/O error.", ioex);
		}
	}
}

/*
import java.util.regex.Pattern;
import java.util.regex.Matcher;

String pattern = ".csv\z";
^(\s)+(.+)+(\.csv)$
http://www.tutorialspoint.com/java/java_regular_expressions.htm
http://stackoverflow.com/questions/30192895/java-regex-file-extension
http://www.mkyong.com/regular-expressions/how-to-validate-image-file-extension-with-regular-expression/
*/